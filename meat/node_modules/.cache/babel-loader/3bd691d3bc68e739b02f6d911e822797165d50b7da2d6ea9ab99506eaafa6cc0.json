{"ast":null,"code":"/*!\r\n * chartjs-plugin-trendline.js\r\n * Version: 2.1.0\r\n *\r\n * Copyright 2024 Marcus Alsterfjord\r\n * Released under the MIT license\r\n * https://github.com/Makanz/chartjs-plugin-trendline/blob/master/README.md\r\n *\r\n * Mod by: vesal: accept also xy-data so works with scatter\r\n */\nconst pluginTrendlineLinear = {\n  id: 'chartjs-plugin-trendline',\n  afterDatasetsDraw: chartInstance => {\n    let yScale;\n    let xScale;\n    for (let axis in chartInstance.scales) {\n      if (axis[0] == 'x') xScale = chartInstance.scales[axis];else yScale = chartInstance.scales[axis];\n      if (xScale && yScale) break;\n    }\n    const ctx = chartInstance.ctx;\n    chartInstance.data.datasets.forEach((dataset, index) => {\n      const showTrendline = dataset.alwaysShowTrendline || chartInstance.isDatasetVisible(index);\n      if (dataset.trendlineLinear && showTrendline && dataset.data.length > 1) {\n        const datasetMeta = chartInstance.getDatasetMeta(index);\n        addFitter(datasetMeta, ctx, dataset, xScale, chartInstance.scales[datasetMeta.yAxisID]);\n      }\n    });\n    ctx.setLineDash([]);\n  }\n};\nconst addFitter = (datasetMeta, ctx, dataset, xScale, yScale) => {\n  let defaultColor = dataset.borderColor || 'rgba(169,169,169, .6)';\n  let colorMin = dataset.trendlineLinear.colorMin || defaultColor;\n  let colorMax = dataset.trendlineLinear.colorMax || defaultColor;\n  let lineWidth = dataset.trendlineLinear.width || dataset.borderWidth;\n  let lineStyle = dataset.trendlineLinear.lineStyle || 'solid';\n  let fillColor = dataset.trendlineLinear.fillColor;\n  const parsing = typeof datasetMeta.controller.chart.options.parsing === \"object\" ? datasetMeta.controller.chart.options.parsing : undefined;\n  const xAxisKey = dataset.trendlineLinear.xAxisKey || parsing ? parsing.xAxisKey : \"x\";\n  const yAxisKey = dataset.trendlineLinear.yAxisKey || parsing ? parsing.yAxisKey : \"y\";\n  lineWidth = lineWidth !== undefined ? lineWidth : 3;\n  let fitter = new LineFitter();\n  let firstIndex = dataset.data.findIndex(d => {\n    return d !== undefined && d !== null;\n  });\n  let lastIndex = dataset.data.length - 1;\n  let startPos = datasetMeta.data[firstIndex][xAxisKey];\n  let endPos = datasetMeta.data[lastIndex][xAxisKey];\n  let xy = typeof dataset.data[firstIndex] === 'object';\n  dataset.data.forEach((data, index) => {\n    if (data == null) return;\n    if (['time', 'timeseries'].includes(xScale.options.type)) {\n      let x = data[xAxisKey] != null ? data[xAxisKey] : data.t;\n      if (x !== undefined) {\n        fitter.add(new Date(x).getTime(), data[yAxisKey]);\n      } else {\n        fitter.add(index, data);\n      }\n    } else if (xy) {\n      if (!isNaN(data.x) && !isNaN(data.y)) {\n        fitter.add(data.x, data.y);\n      } else if (!isNaN(data.x)) {\n        fitter.add(index, data.x);\n      } else if (!isNaN(data.y)) {\n        fitter.add(index, data.y);\n      }\n    } else {\n      fitter.add(index, data);\n    }\n  });\n  let x1 = xScale.getPixelForValue(fitter.minx);\n  let y1 = yScale.getPixelForValue(fitter.f(fitter.minx));\n  let x2;\n  let y2;\n\n  // Project only on x axes, do not project if trendline will never hit x axes\n  if (dataset.trendlineLinear.projection && fitter.scale() < 0) {\n    //  X\n    let x2value = fitter.fo();\n    if (x2value < fitter.minx) x2value = fitter.maxx;\n    x2 = xScale.getPixelForValue(x2value);\n\n    //  Y\n    y2 = yScale.getPixelForValue(fitter.f(x2value));\n  } else {\n    x2 = xScale.getPixelForValue(fitter.maxx);\n    y2 = yScale.getPixelForValue(fitter.f(fitter.maxx));\n  }\n  if (!xy) {\n    x1 = startPos;\n    x2 = endPos;\n  }\n  let drawBottom = datasetMeta.controller.chart.chartArea.bottom;\n  let chartWidth = datasetMeta.controller.chart.width;\n  if (y1 > drawBottom) {\n    // Left side is below zero\n    let diff = y1 - drawBottom;\n    let lineHeight = y1 - y2;\n    let overlapPercentage = diff / lineHeight;\n    let addition = chartWidth * overlapPercentage;\n    y1 = drawBottom;\n    x1 = x1 + addition;\n  } else if (y2 > drawBottom) {\n    // right side is below zero\n    let diff = y2 - drawBottom;\n    let lineHeight = y2 - y1;\n    let overlapPercentage = diff / lineHeight;\n    let subtraction = chartWidth - chartWidth * overlapPercentage;\n    y2 = drawBottom;\n    x2 = chartWidth - (x2 - subtraction);\n  }\n  ctx.lineWidth = lineWidth;\n  if (lineStyle === 'dotted') {\n    ctx.setLineDash([2, 3]); // Dotted\n  } else {\n    ctx.setLineDash([]); // Solid\n  }\n  ctx.beginPath();\n  ctx.moveTo(x1, y1);\n  ctx.lineTo(x2, y2);\n  let gradient = ctx.createLinearGradient(x1, y1, x2, y2);\n  if (y2 < y1) {\n    gradient.addColorStop(0, colorMax);\n    gradient.addColorStop(1, colorMin);\n  } else {\n    gradient.addColorStop(0, colorMin);\n    gradient.addColorStop(1, colorMax);\n  }\n  ctx.strokeStyle = gradient;\n  ctx.stroke();\n  ctx.closePath();\n  if (!!fillColor) {\n    ctx.fillStyle = fillColor;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.lineTo(x2, drawBottom);\n    ctx.lineTo(x1, drawBottom);\n    ctx.closePath();\n    ctx.fill();\n  }\n};\nclass LineFitter {\n  constructor() {\n    this.count = 0;\n    this.sumX = 0;\n    this.sumX2 = 0;\n    this.sumXY = 0;\n    this.sumY = 0;\n    this.minx = 1e100;\n    this.maxx = -1e100;\n    this.maxy = -1e100;\n  }\n  add(x, y) {\n    x = parseFloat(x);\n    y = parseFloat(y);\n    this.count++;\n    this.sumX += x;\n    this.sumX2 += x * x;\n    this.sumXY += x * y;\n    this.sumY += y;\n    if (x < this.minx) this.minx = x;\n    if (x > this.maxx) this.maxx = x;\n    if (y > this.maxy) this.maxy = y;\n  }\n  f(x) {\n    x = parseFloat(x);\n    let det = this.count * this.sumX2 - this.sumX * this.sumX;\n    let offset = (this.sumX2 * this.sumY - this.sumX * this.sumXY) / det;\n    let scale = (this.count * this.sumXY - this.sumX * this.sumY) / det;\n    return offset + x * scale;\n  }\n  fo() {\n    let det = this.count * this.sumX2 - this.sumX * this.sumX;\n    let offset = (this.sumX2 * this.sumY - this.sumX * this.sumXY) / det;\n    let scale = (this.count * this.sumXY - this.sumX * this.sumY) / det;\n\n    // Get x when y = 0\n    let xo = -offset / scale;\n    return xo;\n  }\n  scale() {\n    let det = this.count * this.sumX2 - this.sumX * this.sumX;\n    let scale = (this.count * this.sumXY - this.sumX * this.sumY) / det;\n    return scale;\n  }\n}\n\n// If we're in the browser and have access to the global Chart obj, register plugin automatically\nif (typeof window !== 'undefined' && window.Chart) {\n  if (window.Chart.hasOwnProperty('register')) {\n    window.Chart.register(pluginTrendlineLinear);\n  } else {\n    window.Chart.plugins.register(pluginTrendlineLinear);\n  }\n}\n\n// Otherwise, try to export the plugin\ntry {\n  module.exports = exports = pluginTrendlineLinear;\n} catch (e) {}","map":{"version":3,"names":["pluginTrendlineLinear","id","afterDatasetsDraw","chartInstance","yScale","xScale","axis","scales","ctx","data","datasets","forEach","dataset","index","showTrendline","alwaysShowTrendline","isDatasetVisible","trendlineLinear","length","datasetMeta","getDatasetMeta","addFitter","yAxisID","setLineDash","defaultColor","borderColor","colorMin","colorMax","lineWidth","width","borderWidth","lineStyle","fillColor","parsing","controller","chart","options","undefined","xAxisKey","yAxisKey","fitter","LineFitter","firstIndex","findIndex","d","lastIndex","startPos","endPos","xy","includes","type","x","t","add","Date","getTime","isNaN","y","x1","getPixelForValue","minx","y1","f","x2","y2","projection","scale","x2value","fo","maxx","drawBottom","chartArea","bottom","chartWidth","diff","lineHeight","overlapPercentage","addition","subtraction","beginPath","moveTo","lineTo","gradient","createLinearGradient","addColorStop","strokeStyle","stroke","closePath","fillStyle","fill","constructor","count","sumX","sumX2","sumXY","sumY","maxy","parseFloat","det","offset","xo","window","Chart","hasOwnProperty","register","plugins","module","exports","e"],"sources":["D:/hub/meat/node_modules/chartjs-plugin-trendline/src/chartjs-plugin-trendline.js"],"sourcesContent":["/*!\r\n * chartjs-plugin-trendline.js\r\n * Version: 2.1.0\r\n *\r\n * Copyright 2024 Marcus Alsterfjord\r\n * Released under the MIT license\r\n * https://github.com/Makanz/chartjs-plugin-trendline/blob/master/README.md\r\n *\r\n * Mod by: vesal: accept also xy-data so works with scatter\r\n */\r\nconst pluginTrendlineLinear = {\r\n    id: 'chartjs-plugin-trendline',\r\n    afterDatasetsDraw: (chartInstance) => {\r\n        let yScale;\r\n        let xScale;\r\n        for (let axis in chartInstance.scales) {\r\n            if (axis[0] == 'x') xScale = chartInstance.scales[axis];\r\n            else yScale = chartInstance.scales[axis];\r\n            if (xScale && yScale) break;\r\n        }\r\n        const ctx = chartInstance.ctx;\r\n\r\n        chartInstance.data.datasets.forEach((dataset, index) => {\r\n            const showTrendline =\r\n                dataset.alwaysShowTrendline ||\r\n                chartInstance.isDatasetVisible(index);\r\n\r\n            if (\r\n                dataset.trendlineLinear &&\r\n                showTrendline &&\r\n                dataset.data.length > 1\r\n            ) {\r\n                const datasetMeta = chartInstance.getDatasetMeta(index);\r\n                addFitter(\r\n                    datasetMeta,\r\n                    ctx,\r\n                    dataset,\r\n                    xScale,\r\n                    chartInstance.scales[datasetMeta.yAxisID]\r\n                );\r\n            }\r\n        });\r\n\r\n        ctx.setLineDash([]);\r\n    },\r\n};\r\n\r\nconst addFitter = (datasetMeta, ctx, dataset, xScale, yScale) => {\r\n    let defaultColor = dataset.borderColor || 'rgba(169,169,169, .6)';\r\n    let colorMin = dataset.trendlineLinear.colorMin || defaultColor;\r\n    let colorMax = dataset.trendlineLinear.colorMax || defaultColor;\r\n    let lineWidth = dataset.trendlineLinear.width || dataset.borderWidth;\r\n    let lineStyle = dataset.trendlineLinear.lineStyle || 'solid';\r\n    let fillColor = dataset.trendlineLinear.fillColor;\r\n\r\n    const parsing = typeof datasetMeta.controller.chart.options.parsing === \"object\" ?\r\n        datasetMeta.controller.chart.options.parsing : undefined;\r\n    const xAxisKey = dataset.trendlineLinear.xAxisKey || parsing ? parsing.xAxisKey : \"x\";\r\n    const yAxisKey = dataset.trendlineLinear.yAxisKey || parsing ? parsing.yAxisKey : \"y\";\r\n\r\n    lineWidth = lineWidth !== undefined ? lineWidth : 3;\r\n\r\n    let fitter = new LineFitter();\r\n    let firstIndex = dataset.data.findIndex((d) => {\r\n        return d !== undefined && d !== null;\r\n    });\r\n    let lastIndex = dataset.data.length - 1;\r\n    let startPos = datasetMeta.data[firstIndex][xAxisKey];\r\n    let endPos = datasetMeta.data[lastIndex][xAxisKey];\r\n    let xy = typeof dataset.data[firstIndex] === 'object';\r\n\r\n    dataset.data.forEach((data, index) => {\r\n        if (data == null) return;\r\n\r\n        if (['time', 'timeseries'].includes(xScale.options.type)) {\r\n            let x = data[xAxisKey] != null ? data[xAxisKey] : data.t;\r\n            if (x !== undefined) {\r\n                fitter.add(new Date(x).getTime(), data[yAxisKey]);\r\n            } else {\r\n                fitter.add(index, data);\r\n            }\r\n        } else if (xy) {\r\n            if (!isNaN(data.x) && !isNaN(data.y)) {\r\n                fitter.add(data.x, data.y);\r\n            } else if (!isNaN(data.x)) {\r\n                fitter.add(index, data.x);\r\n            } else if (!isNaN(data.y)) {\r\n                fitter.add(index, data.y);\r\n            }\r\n        } else {\r\n            fitter.add(index, data);\r\n        }\r\n    });\r\n\r\n    let x1 = xScale.getPixelForValue(fitter.minx);\r\n    let y1 = yScale.getPixelForValue(fitter.f(fitter.minx));\r\n\r\n    let x2;\r\n    let y2;\r\n\r\n    // Project only on x axes, do not project if trendline will never hit x axes\r\n    if (dataset.trendlineLinear.projection && fitter.scale() < 0) {\r\n        //  X\r\n        let x2value = fitter.fo();\r\n        if (x2value < fitter.minx) x2value = fitter.maxx;\r\n        x2 = xScale.getPixelForValue(x2value);\r\n\r\n        //  Y\r\n        y2 = yScale.getPixelForValue(fitter.f(x2value));\r\n    } else {\r\n        x2 = xScale.getPixelForValue(fitter.maxx);\r\n        y2 = yScale.getPixelForValue(fitter.f(fitter.maxx));\r\n    }\r\n\r\n    if (!xy) {\r\n        x1 = startPos;\r\n        x2 = endPos;\r\n    }\r\n\r\n    let drawBottom = datasetMeta.controller.chart.chartArea.bottom;\r\n    let chartWidth = datasetMeta.controller.chart.width;\r\n\r\n    if (y1 > drawBottom) {\r\n        // Left side is below zero\r\n        let diff = y1 - drawBottom;\r\n        let lineHeight = y1 - y2;\r\n        let overlapPercentage = diff / lineHeight;\r\n        let addition = chartWidth * overlapPercentage;\r\n\r\n        y1 = drawBottom;\r\n        x1 = x1 + addition;\r\n    } else if (y2 > drawBottom) {\r\n        // right side is below zero\r\n        let diff = y2 - drawBottom;\r\n        let lineHeight = y2 - y1;\r\n        let overlapPercentage = diff / lineHeight;\r\n        let subtraction = chartWidth - chartWidth * overlapPercentage;\r\n\r\n        y2 = drawBottom;\r\n        x2 = chartWidth - (x2 - subtraction);\r\n    }\r\n\r\n    ctx.lineWidth = lineWidth;\r\n\r\n    if (lineStyle === 'dotted') {\r\n        ctx.setLineDash([2, 3]); // Dotted\r\n    } else {\r\n        ctx.setLineDash([]); // Solid\r\n    }\r\n\r\n    ctx.beginPath();\r\n    ctx.moveTo(x1, y1);\r\n    ctx.lineTo(x2, y2);\r\n\r\n    let gradient = ctx.createLinearGradient(x1, y1, x2, y2);\r\n    if (y2 < y1) {\r\n        gradient.addColorStop(0, colorMax);\r\n        gradient.addColorStop(1, colorMin);\r\n    } else {\r\n        gradient.addColorStop(0, colorMin);\r\n        gradient.addColorStop(1, colorMax);\r\n    }\r\n\r\n    ctx.strokeStyle = gradient;\r\n\r\n    ctx.stroke();\r\n    ctx.closePath();\r\n\r\n    if (!!fillColor) {\r\n        ctx.fillStyle = fillColor;\r\n        ctx.beginPath();\r\n        ctx.moveTo(x1, y1);\r\n        ctx.lineTo(x2, y2);\r\n        ctx.lineTo(x2, drawBottom);\r\n        ctx.lineTo(x1, drawBottom);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n    }\r\n};\r\n\r\nclass LineFitter {\r\n    constructor() {\r\n        this.count = 0;\r\n        this.sumX = 0;\r\n        this.sumX2 = 0;\r\n        this.sumXY = 0;\r\n        this.sumY = 0;\r\n        this.minx = 1e100;\r\n        this.maxx = -1e100;\r\n        this.maxy = -1e100;\r\n    }\r\n\r\n    add(x, y) {\r\n        x = parseFloat(x);\r\n        y = parseFloat(y);\r\n\r\n        this.count++;\r\n        this.sumX += x;\r\n        this.sumX2 += x * x;\r\n        this.sumXY += x * y;\r\n        this.sumY += y;\r\n        if (x < this.minx) this.minx = x;\r\n        if (x > this.maxx) this.maxx = x;\r\n        if (y > this.maxy) this.maxy = y;\r\n    }\r\n\r\n    f(x) {\r\n        x = parseFloat(x);\r\n\r\n        let det = this.count * this.sumX2 - this.sumX * this.sumX;\r\n        let offset = (this.sumX2 * this.sumY - this.sumX * this.sumXY) / det;\r\n        let scale = (this.count * this.sumXY - this.sumX * this.sumY) / det;\r\n        return offset + x * scale;\r\n    }\r\n\r\n    fo() {\r\n        let det = this.count * this.sumX2 - this.sumX * this.sumX;\r\n        let offset = (this.sumX2 * this.sumY - this.sumX * this.sumXY) / det;\r\n        let scale = (this.count * this.sumXY - this.sumX * this.sumY) / det;\r\n\r\n        // Get x when y = 0\r\n        let xo = -offset / scale;\r\n        return xo;\r\n    }\r\n\r\n    scale() {\r\n        let det = this.count * this.sumX2 - this.sumX * this.sumX;\r\n        let scale = (this.count * this.sumXY - this.sumX * this.sumY) / det;\r\n\r\n        return scale;\r\n    }\r\n}\r\n\r\n// If we're in the browser and have access to the global Chart obj, register plugin automatically\r\nif (typeof window !== 'undefined' && window.Chart) {\r\n    if (window.Chart.hasOwnProperty('register')) {\r\n        window.Chart.register(pluginTrendlineLinear);\r\n    } else {\r\n        window.Chart.plugins.register(pluginTrendlineLinear);\r\n    }\r\n}\r\n\r\n// Otherwise, try to export the plugin\r\ntry {\r\n    module.exports = exports = pluginTrendlineLinear;\r\n} catch (e) {}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}